version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: book.app
        restart: always
        volumes:
            - .:/var/www/html
        command: bash -c "cp .env.example .env && composer i && php artisan key:generate &&  php-fpm"
        depends_on:
            - elasticsearch
            - nginx
        networks:
            - book_netwotk
    elasticsearch:
        image: elasticsearch:8.3.3
        container_name: book.elastic
        restart: unless-stopped
        environment:
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
            - node.name=es01
        ports:
            -   "9200:9200"
            -   "9300:9300"
        networks:
            - book_netwotk
        volumes:
            - es_data:/usr/share/elasticsearch/data
    kibana:
        container_name: kibana
        image:  kibana:8.3.3
        restart: unless-stopped
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - book_netwotk
    nginx:
        build:
            context: .
            dockerfile: Dockerfile.nginx
        restart: always
        ports:
            - "8000:80"
        networks:
            - book_netwotk
        volumes:
            - ./default.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html
    postgres:
        image: postgres:latest
        container_name: book.postgres
        restart: always
        environment:
            POSTGRES_DB: odin
            POSTGRES_USER: odin
            POSTGRES_PASSWORD: secret
        volumes:
            - /var/lib/postgresql/data:/var/lib/postgresql/data
        networks:
            - book_netwotk
        ports:
            - "5433:5432"
networks:
    book_netwotk:
        driver: bridge
volumes:
    es_data:
        driver: local
